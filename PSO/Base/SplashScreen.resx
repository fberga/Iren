<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="loader.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>